# Generated by Django 3.2.4 on 2022-04-13 12:31

import django.contrib.postgres.fields
import django.core.validators
from django.db import migrations, models
import encrypted_fields.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Ird',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('case_no', models.PositiveIntegerField(blank=True, null=True, verbose_name='차트번호')),
                ('name', encrypted_fields.fields.EncryptedCharField(blank=True, max_length=20, null=True, verbose_name='성명')),
                ('birth_year_and_month', encrypted_fields.fields.EncryptedDateField(blank=True, null=True, verbose_name='생년월일')),
                ('sex', models.PositiveIntegerField(blank=True, choices=[(1, 'Male'), (2, 'Female'), (3, 'All')], null=True, verbose_name='SEX')),
                ('finding', models.TextField(blank=True, null=True, verbose_name='특이사항')),
                ('sortation', models.PositiveIntegerField(blank=True, choices=[(1, 1), (2, 2)], null=True, verbose_name='구분')),
                ('ARK_SPH', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='ARK_SPH')),
                ('ARK_CYL', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='ARK_CYL')),
                ('ARK_AXIS', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='ARK_AXIS')),
                ('ARK_K1', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='ARK_K1')),
                ('ARK_K2', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='ARK_K2')),
                ('ARK_KM', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='ARK_KM')),
                ('ARK_K_cyl', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='ARK_K(cyl)')),
                ('ARK_K_Axis', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='ARK_K(Axis)')),
                ('UDVA', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='UDVA')),
                ('UNVA', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='UNVA')),
                ('CDVA', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='CDVA')),
                ('CNVA', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='CNVA')),
                ('IOP', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='IOP')),
                ('OCT_CST', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='OCT_CST')),
                ('Cones_a', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Cones_a')),
                ('Cones_b', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Cones_b')),
                ('Flicker', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Flicker')),
                ('Pattern_N35_mono', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Pattern_N35(단안)')),
                ('Pattern_P50_mono', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Pattern_P50(단안)')),
                ('Pattern_N95_mono', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Pattern_N95(단안)')),
                ('Pattern_N35_bi', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Pattern_N35(양안)')),
                ('Pattern_P50_bi', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Pattern_P50(양안)')),
                ('Pattern_N95_bi', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Pattern_N95(양안)')),
                ('Rods_a', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Rods_a')),
                ('Rods_b', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Rods_b')),
                ('Maximal_a', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Maximal_a')),
                ('Maximal_b', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Maximal_b')),
                ('Maximal_c', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='Maximal_c')),
                ('VEP_N75', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='VEP_N75')),
                ('VEP_P100', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='VEP_P100')),
                ('VEP_N145', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='VEP_N145')),
                ('VEP_P1', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='VEP_P1')),
                ('VEP_P2', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True, verbose_name='VEP_P2')),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='IrdHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('register_date', models.DateField(blank=True, help_text='동의서 취득 날짜', null=True, verbose_name='동의서 취득 날짜')),
                ('subject_id', models.PositiveIntegerField(blank=True, null=True, verbose_name='Subject ID')),
                ('name', encrypted_fields.fields.EncryptedCharField(blank=True, help_text='성명', max_length=444, null=True, verbose_name='이름')),
                ('birthdate', encrypted_fields.fields.EncryptedDateField(blank=True, help_text='생년월일', null=True, verbose_name='생년월일')),
                ('age', models.PositiveIntegerField(blank=True, help_text='나이', null=True, verbose_name='나이')),
                ('sex', models.IntegerField(blank=True, choices=[(0, 0), (1, 1), (2, 2)], help_text='성별', null=True, verbose_name='성별')),
                ('address', encrypted_fields.fields.EncryptedTextField(blank=True, help_text='도/시', null=True, verbose_name='주소')),
                ('job', models.TextField(blank=True, help_text='어떤 일을 하고 계신가요?', null=True, verbose_name='직업')),
                ('diagnosis', models.TextField(blank=True, help_text='진단명', null=True, verbose_name='진단명')),
                ('sph_od', models.DecimalField(blank=True, decimal_places=2, help_text='원/근시', max_digits=10, null=True, verbose_name='ARK_SPH')),
                ('cyl_od', models.DecimalField(blank=True, decimal_places=2, help_text='난시', max_digits=10, null=True, verbose_name='ARK_CYL')),
                ('km_od', models.DecimalField(blank=True, decimal_places=2, help_text='각막난시', max_digits=10, null=True, verbose_name='ARK_KM')),
                ('k_cyl_od', models.DecimalField(blank=True, decimal_places=2, help_text='각막난시량', max_digits=10, null=True, verbose_name='ARK_K(Cyl)')),
                ('k_axis_od', models.PositiveIntegerField(blank=True, help_text='각막난시축', null=True, verbose_name='ARK_K(Axis)')),
                ('udva_od', models.DecimalField(blank=True, decimal_places=2, help_text='원거리나안시력', max_digits=10, null=True, verbose_name='UDVA')),
                ('unva_od', models.DecimalField(blank=True, decimal_places=2, help_text='근거리나안시력', max_digits=10, null=True, verbose_name='UNVA')),
                ('cdva_od', models.DecimalField(blank=True, decimal_places=2, help_text='원거리교정시력', max_digits=10, null=True, verbose_name='CDVA')),
                ('cnva_od', models.DecimalField(blank=True, decimal_places=2, help_text='근거리교정시력', max_digits=10, null=True, verbose_name='CNVA')),
                ('iop_od', models.DecimalField(blank=True, decimal_places=2, help_text='안압', max_digits=10, null=True, verbose_name='IOP')),
                ('cst_od', models.PositiveIntegerField(blank=True, help_text='중심망막 두께', null=True, verbose_name='HOCT_CST')),
                ('vfi_od_full', models.PositiveIntegerField(blank=True, help_text='중심시야 대비감도 전체', null=True, verbose_name='VF_VFI_full')),
                ('vfi_od_part', models.PositiveIntegerField(blank=True, help_text='중심시야 대비감도 부분', null=True, verbose_name='VF_VFI_part')),
                ('cones_a_od', models.DecimalField(blank=True, decimal_places=2, help_text='망막전위도검사', max_digits=10, null=True, verbose_name='ERG_Cones_a')),
                ('cones_b_od', models.DecimalField(blank=True, decimal_places=2, help_text='망막전위도검사', max_digits=10, null=True, verbose_name='ERG_Cones_b')),
                ('flicker_od', models.DecimalField(blank=True, decimal_places=2, help_text='망막전위도검사', max_digits=10, null=True, verbose_name='ERG_Flicker')),
                ('pattern_n35_mono_od', models.DecimalField(blank=True, decimal_places=2, help_text='망막전위도검사', max_digits=10, null=True, verbose_name='ERG_Pattern_n35_mono')),
                ('pattern_p50_mono_od', models.DecimalField(blank=True, decimal_places=2, help_text='망막전위도검사', max_digits=10, null=True, verbose_name='ERG_Pattern_p50_mono')),
                ('pattern_n95_mono_od', models.DecimalField(blank=True, decimal_places=2, help_text='망막전위도검사', max_digits=10, null=True, verbose_name='ERG_Pattern_n95_mono')),
                ('pattern_n35_bi_od', models.DecimalField(blank=True, decimal_places=2, help_text='망막전위도검사', max_digits=10, null=True, verbose_name='ERG_Pattern_n35_bi')),
                ('pattern_p50_bi_od', models.DecimalField(blank=True, decimal_places=2, help_text='망막전위도검사', max_digits=10, null=True, verbose_name='ERG_Pattern_p50_bi')),
                ('pattern_n95_bi_od', models.DecimalField(blank=True, decimal_places=2, help_text='망막전위도검사', max_digits=10, null=True, verbose_name='ERG_Pattern_n95_bi')),
                ('rods_a_od', models.DecimalField(blank=True, decimal_places=2, help_text='망막전위도검사', max_digits=10, null=True, verbose_name='ERG_Rods_a')),
                ('rods_b_od', models.DecimalField(blank=True, decimal_places=2, help_text='망막전위도검사', max_digits=10, null=True, verbose_name='ERG_Rods_b')),
                ('maximal_a_od', models.DecimalField(blank=True, decimal_places=2, help_text='망막전위도검사', max_digits=10, null=True, verbose_name='ERG_Maximal_a')),
                ('maximal_b_od', models.DecimalField(blank=True, decimal_places=2, help_text='망막전위도검사', max_digits=10, null=True, verbose_name='ERG_Maximal_b')),
                ('maximal_c_od', models.DecimalField(blank=True, decimal_places=2, help_text='망막전위도검사', max_digits=10, null=True, verbose_name='ERG_Maximal_c')),
                ('cystoid_macular_edema_od', models.IntegerField(blank=True, choices=[(0, 0), (1, 1), (2, 2)], help_text='황반 부음', null=True, verbose_name='CME')),
                ('sector_rp_od', models.IntegerField(blank=True, choices=[(0, 0), (1, 1), (2, 2)], help_text='부채형 RP', null=True, verbose_name='sector_RP')),
                ('retinitis_punctata_albescens_od', models.IntegerField(blank=True, choices=[(0, 0), (1, 1), (2, 2)], help_text='백점상망막염', null=True, verbose_name='retinitis_punctata_albescens')),
                ('sph_os', models.DecimalField(blank=True, decimal_places=2, help_text='원/근시', max_digits=10, null=True, verbose_name='ARK_SPH')),
                ('cyl_os', models.DecimalField(blank=True, decimal_places=2, help_text='난시', max_digits=10, null=True, verbose_name='ARK_CYL')),
                ('km_os', models.DecimalField(blank=True, decimal_places=2, help_text='각막난시', max_digits=10, null=True, verbose_name='ARK_KM')),
                ('k_cyl_os', models.DecimalField(blank=True, decimal_places=2, help_text='각막난시량', max_digits=10, null=True, verbose_name='ARK_K(Cyl)')),
                ('k_axis_os', models.PositiveIntegerField(blank=True, help_text='각막난시축', null=True, verbose_name='ARK_K(Axis)')),
                ('udva_os', models.DecimalField(blank=True, decimal_places=2, help_text='원거리나안시력', max_digits=10, null=True, verbose_name='UDVA')),
                ('unva_os', models.DecimalField(blank=True, decimal_places=2, help_text='근거리나안시력', max_digits=10, null=True, verbose_name='UNVA')),
                ('cdva_os', models.DecimalField(blank=True, decimal_places=2, help_text='원거리교정시력', max_digits=10, null=True, verbose_name='CDVA')),
                ('cnva_os', models.DecimalField(blank=True, decimal_places=2, help_text='근거리교정시력', max_digits=10, null=True, verbose_name='CNVA')),
                ('iop_os', models.DecimalField(blank=True, decimal_places=2, help_text='안압', max_digits=10, null=True, verbose_name='IOP')),
                ('cst_os', models.PositiveIntegerField(blank=True, help_text='중심망막 두께', null=True, verbose_name='HOCT_CST')),
                ('vfi_os_full', models.PositiveIntegerField(blank=True, help_text='중심시야 대비감도 전체', null=True, verbose_name='VF_VFI_full')),
                ('vfi_os_part', models.PositiveIntegerField(blank=True, help_text='중심시야 대비감도 부분', null=True, verbose_name='VF_VFI_part')),
                ('cones_a_os', models.DecimalField(blank=True, decimal_places=2, help_text='망막전위도검사', max_digits=10, null=True, verbose_name='ERG_Cones_a')),
                ('cones_b_os', models.DecimalField(blank=True, decimal_places=2, help_text='망막전위도검사', max_digits=10, null=True, verbose_name='ERG_Cones_b')),
                ('flicker_os', models.DecimalField(blank=True, decimal_places=2, help_text='망막전위도검사', max_digits=10, null=True, verbose_name='ERG_Flicker')),
                ('pattern_n35_mono_os', models.DecimalField(blank=True, decimal_places=2, help_text='망막전위도검사', max_digits=10, null=True, verbose_name='ERG_Pattern_n35_mono')),
                ('pattern_p50_mono_os', models.DecimalField(blank=True, decimal_places=2, help_text='망막전위도검사', max_digits=10, null=True, verbose_name='ERG_Pattern_p50_mono')),
                ('pattern_n95_mono_os', models.DecimalField(blank=True, decimal_places=2, help_text='망막전위도검사', max_digits=10, null=True, verbose_name='ERG_Pattern_n95_mono')),
                ('pattern_n35_bi_os', models.DecimalField(blank=True, decimal_places=2, help_text='망막전위도검사', max_digits=10, null=True, verbose_name='ERG_Pattern_n35_bi')),
                ('pattern_p50_bi_os', models.DecimalField(blank=True, decimal_places=2, help_text='망막전위도검사', max_digits=10, null=True, verbose_name='ERG_Pattern_p50_bi')),
                ('pattern_n95_bi_os', models.DecimalField(blank=True, decimal_places=2, help_text='망막전위도검사', max_digits=10, null=True, verbose_name='ERG_Pattern_n95_bi')),
                ('rods_a_os', models.DecimalField(blank=True, decimal_places=2, help_text='망막전위도검사', max_digits=10, null=True, verbose_name='ERG_Rods_a')),
                ('rods_b_os', models.DecimalField(blank=True, decimal_places=2, help_text='망막전위도검사', max_digits=10, null=True, verbose_name='ERG_Rods_b')),
                ('maximal_a_os', models.DecimalField(blank=True, decimal_places=2, help_text='망막전위도검사', max_digits=10, null=True, verbose_name='ERG_Maximal_a')),
                ('maximal_b_os', models.DecimalField(blank=True, decimal_places=2, help_text='망막전위도검사', max_digits=10, null=True, verbose_name='ERG_Maximal_b')),
                ('maximal_c_os', models.DecimalField(blank=True, decimal_places=2, help_text='망막전위도검사', max_digits=10, null=True, verbose_name='ERG_Maximal_c')),
                ('cystoid_macular_edema_os', models.IntegerField(blank=True, choices=[(0, 0), (1, 1), (2, 2)], help_text='황반 부음', null=True, verbose_name='CME')),
                ('sector_rp_os', models.IntegerField(blank=True, choices=[(0, 0), (1, 1), (2, 2)], help_text='부채형 RP', null=True, verbose_name='sector_RP')),
                ('retinitis_punctata_albescens_os', models.IntegerField(blank=True, choices=[(0, 0), (1, 1), (2, 2)], help_text='백점상망막염', null=True, verbose_name='retinitis_punctata_albescens')),
                ('case_history', models.ImageField(blank=True, help_text='실퇴본에서 조사한 병력청취 기록입니다.<br/>이미지 삽입 (스캔된 PDF파일 업로드)', null=True, upload_to='ird/history/%Y/%m/%d', verbose_name='실퇴본_병력청취')),
                ('first_symptom_age', models.PositiveIntegerField(blank=True, help_text='처음 눈에 증상이 나타난 나이는 언제인가요?', null=True, verbose_name='첫 증상 나이')),
                ('first_symptom_year', models.PositiveIntegerField(blank=True, help_text='처음 눈에 증상이 나타난 연도는 언제인가요?', null=True, verbose_name='첫 증상 연도')),
                ('first_symptom_reason', models.TextField(blank=True, help_text='어떤 계기로 진단을 받게 되었나요?', null=True, verbose_name='진단 계기')),
                ('first_diagnosis_hospital', models.TextField(blank=True, help_text='진단을 처음 받았던 병원은 어디인가요?', null=True, verbose_name='첫 진단 병원')),
                ('best_age', models.IntegerField(blank=True, choices=[(0, 0), (1, 1), (2, 2)], help_text='시력이 가장 좋았던 때는 언제인가요?', null=True, verbose_name='가장 좋았을 때 시력 나이')),
                ('best_va_lt', models.TextField(blank=True, help_text='가장 좋았던 좌측 시력은 얼마였나요?', null=True, verbose_name='가장 좋았을 때 시력 좌')),
                ('best_va_rt', models.TextField(blank=True, help_text='가장 좋았던 우측 시력은 얼마였나요?', null=True, verbose_name='가장 좋았을 때 시력 우')),
                ('best_vfi_lt', models.TextField(blank=True, help_text='가장 좋았던 좌측 시야는 얼마였나요?', null=True, verbose_name='가장 좋았을 때 시야 좌')),
                ('best_vfi_rt', models.TextField(blank=True, help_text='가장 좋았던 우측 시야는 얼마였나요?', null=True, verbose_name='가장 좋았을 때 시야 우')),
                ('first_diagnosis_age', models.IntegerField(blank=True, choices=[(0, 0), (1, 1), (2, 2)], help_text='진단을 처음 받았던 때는 언제였나요?', null=True, verbose_name='첫 진단 나이')),
                ('first_va_lt', models.TextField(blank=True, help_text='진단을 처음 받았던 때의 좌측 시력은 얼마였나요?', null=True, verbose_name='최초 진단시 시력 좌')),
                ('first_va_rt', models.TextField(blank=True, help_text='진단을 처음 받았던 때의 우측 시력은 얼마였나요?', null=True, verbose_name='최초 진단시 시력 우')),
                ('first_vfi_lt', models.TextField(blank=True, help_text='진단을 처음 받았던 때의 좌측 시야는 얼마였나요?', null=True, verbose_name='최초 진단시 시야 좌')),
                ('first_vfi_rt', models.TextField(blank=True, help_text='진단을 처음 받았던 때의 우측 시야는 얼마였나요?', null=True, verbose_name='최초 진단시 시야 우')),
                ('current_va_lt', models.TextField(blank=True, help_text='현재 좌측 시력은 얼마인가요?', null=True, verbose_name='현재 시력 좌')),
                ('current_va_rt', models.TextField(blank=True, help_text='현재 우측 시력은 얼마인가요?', null=True, verbose_name='현재 시력 우')),
                ('current_vfi_lt', models.TextField(blank=True, help_text='현재 좌측 시야는 얼마인가요?', null=True, verbose_name='현재 시야 좌')),
                ('current_vfi_rt', models.TextField(blank=True, help_text='현재 우측 시야는 얼마인가요?', null=True, verbose_name='현재 시야 우')),
                ('current_hospital', models.TextField(blank=True, help_text='현재 다니는 병원은 어디인가요?', null=True, verbose_name='현재 다니는 병원')),
                ('pedigree', models.ImageField(blank=True, help_text='가족 구성원이 어떻게 되시나요?', null=True, upload_to='ird/pedigree/%Y/%m/%d', verbose_name='가계도')),
                ('familyhistory_diagnosis1', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(blank=True, choices=[(0, '없음'), (1, '잘 모르겠음'), (2, '자녀 및 손자/손녀'), (3, '모계 직계(어머니, 외할아버지/할머니)'), (4, '부계 직계(아버지, 할아버지/할머니)'), (5, '모계 4촌 이내(외숙부/이모, 사촌 형제자매)'), (6, '부계 4촌 이내(백부/숙부/고모, 사촌 형제자매)')], help_text='가족 중 같은 종류의 유전성 망막질환을 진단받은 사람이 있나요? 모두 선택해주세요', null=True, verbose_name='같은 종류 진단 받은 가족'), blank=True, null=True, size=None)),
                ('familyhistory_diagnosis2', models.IntegerField(blank=True, choices=[(1, '있음'), (2, '없음'), (3, '잘모르겠음')], help_text='가족 중 다른 종류의 유전성 망막질환을 진단받은 사람이 있나요?', null=True, verbose_name='다른 종류 진단 받은 가족')),
                ('familyhistory_diagnosis3', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(blank=True, choices=[(0, '없음'), (1, '잘 모르겠음'), (2, '자녀 및 손자/손녀'), (3, '모계 직계(어머니, 외할아버지/할머니)'), (4, '부계 직계(아버지, 할아버지/할머니)'), (5, '모계 4촌 이내(외숙부/이모, 사촌 형제자매)'), (6, '부계 4촌 이내(백부/숙부/고모, 사촌 형제자매)')], help_text='가족 중 다른 종류의 유전성 망막질환을 진단받은 사람을 모두 선택해주세요', null=True, verbose_name='다른 종류 진단 받은 가족 선택'), blank=True, null=True, size=None)),
                ('familyhistory_diagnosis_name', models.TextField(blank=True, help_text='가족 중 다른 종류의 유전성 망막질환을 진단받은 사람이 있다면, 그 질환은 무엇인가요?', null=True, verbose_name='가족 다른 종류 진단명')),
                ('underlying_disease1', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(blank=True, choices=[(0, '없음'), (1, '청각장애'), (2, '당뇨'), (3, '평형감각 이상'), (4, '지적장애'), (5, '비뇨기계 이상'), (6, '다지증'), (7, '매독'), (8, '바이러스 질환'), (9, '악성종양'), (10, '포도막염')], help_text='과거 앓았거나 현재 앓고 있는 질환이 있나요? 모두 선택해주세요', null=True, verbose_name='기저질환'), blank=True, null=True, size=None)),
                ('underlying_disease2', models.TextField(blank=True, help_text='그외 기타 질환 적어주세요', null=True, verbose_name='기타 기저질환')),
                ('drug', models.IntegerField(blank=True, choices=[(1, '있음'), (2, '없음'), (3, '잘모르겠음')], help_text='최근 12주 이내에 복용한 약물이 있나요? ', null=True, verbose_name='12주 이내 복용한 약물')),
                ('drug_name', models.TextField(blank=True, help_text='약물명을 적어주세요', null=True, verbose_name='약물명')),
                ('myodesopsia', models.IntegerField(blank=True, choices=[(1, '있음'), (2, '없음')], help_text='비문증을 경험한 적이 있나요?', null=True, verbose_name='비문증')),
                ('myodesopsia_age', models.PositiveIntegerField(blank=True, help_text='비문증 증상이 처음 나타났던 나이를 적어주세요 ', null=True, verbose_name='비문증 경험 나이')),
                ('night_blindness', models.IntegerField(blank=True, choices=[(1, '있음'), (2, '없음')], help_text='야맹증을 경험한 적이 있나요?', null=True, verbose_name='야맹증')),
                ('night_blindness_age', models.PositiveIntegerField(blank=True, help_text='야맹증 증상이 처음 나타났던 나이를 적어주세요 ', null=True, verbose_name='야맹증 나이')),
                ('peripheral_vision', models.IntegerField(blank=True, choices=[(1, '있음'), (2, '없음')], help_text='시야가 좁아진다고 느낀 적이 있나요?', null=True, verbose_name='주변(측면)시력')),
                ('peripheral_vision_age', models.PositiveIntegerField(blank=True, help_text='시야 좁은 증상이 처음 나타났던 나이를 적어주세요 ', null=True, verbose_name='주변(측면)시력 나이')),
                ('central_vision', models.IntegerField(blank=True, choices=[(1, '있음'), (2, '없음')], help_text='중심 시력에 이상이 있다고 느낀 적이 있나요?', null=True, verbose_name='중심시력')),
                ('central_vision_age', models.PositiveIntegerField(blank=True, help_text='중심 시력 이상 증상이 처음 나타났던 나이를 적어주세요 ', null=True, verbose_name='중심시력 나이')),
                ('read', models.IntegerField(blank=True, choices=[(1, '가능'), (2, '불가능')], help_text='책이나 컴퓨터 화면 등 가까이 있는 물체를 볼 수 있나요?', null=True, verbose_name='읽기')),
                ('object_recognition', models.IntegerField(blank=True, choices=[(1, '가능'), (2, '불가능')], help_text='멀리 있는 물체를 볼 수 있나요?', null=True, verbose_name='물체 확인')),
                ('dark_adaptation', models.IntegerField(blank=True, choices=[(1, '있음'), (2, '없음')], help_text='암순응에 이상이 있다고 느낀 적이 있나요?', null=True, verbose_name='암순응')),
                ('dark_adaptation_age', models.PositiveIntegerField(blank=True, help_text='암순응 이상 증상이 처음 나타났던 나이를 적어주세요 ', null=True, verbose_name='암순응 나이')),
                ('color_sense', models.IntegerField(blank=True, choices=[(1, '있음'), (2, '없음')], help_text='색각에 이상이 있다고 느낀 적이 있나요?', null=True, verbose_name='색각')),
                ('color_sense_age', models.PositiveIntegerField(blank=True, help_text='색각 이상 증상이 처음 나타났던 나이를 적어주세요 ', null=True, verbose_name='색각 나이')),
                ('photopsia', models.IntegerField(blank=True, choices=[(1, '있음'), (2, '없음')], help_text='눈부심을 경험한 적이 있나요', null=True, verbose_name='눈부심')),
                ('photopsia_age', models.PositiveIntegerField(blank=True, help_text='눈부심 증상이 처음 나타났던 나이를 적어주세요 ', null=True, verbose_name='눈부심 나이')),
                ('hearing_defect', models.IntegerField(blank=True, choices=[(1, '있음'), (2, '없음')], help_text='청력에 이상이 있나요?', null=True, verbose_name='청력')),
                ('hearing_defect_age', models.PositiveIntegerField(blank=True, help_text='청력 이상 증상이 처음 나타났던 나이를 적어주세요', null=True, verbose_name='쳥력 첫 증상 나이')),
                ('cataract', models.IntegerField(blank=True, choices=[(1, '있음'), (2, '없음')], help_text='백내장을 경험한 적이 있나요? ', null=True, verbose_name='백내장')),
                ('cataract_op', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(blank=True, choices=[(1, '있음'), (2, '없음')], help_text='백내장 수술을 받은 적이 있나요?', null=True, verbose_name='백내장 수술'), blank=True, null=True, size=None)),
                ('cataract_op_history', models.TextField(blank=True, help_text='수술 이력을 자세히 적어주세요', null=True, verbose_name='백내장 수술 이력')),
                ('glaucoma', models.IntegerField(blank=True, choices=[(1, '있음'), (2, '없음')], help_text='녹내장을 경험한 적이 있나요?', null=True, verbose_name='녹내장')),
                ('glaucoma_op', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(blank=True, choices=[(1, '오른쪽 눈'), (2, '왼쪽 눈'), (3, '수술하지 않음')], help_text='녹내장 수술을 받은 적이 있나요?', null=True, verbose_name='녹내장 수술'), blank=True, null=True, size=None)),
                ('glaucoma_op_history', models.TextField(blank=True, help_text='수술 이력을 자세히 적어주세요', null=True, verbose_name='녹내장 수술 이력')),
                ('retinal_detachment', models.IntegerField(blank=True, choices=[(1, '있음'), (2, '없음')], help_text='망막 박리를 경험한 적이 있나요?', null=True, verbose_name='망막박리')),
                ('retinal_detachment_op', django.contrib.postgres.fields.ArrayField(base_field=models.IntegerField(blank=True, choices=[(1, '오른쪽 눈'), (2, '왼쪽 눈'), (3, '수술하지 않음')], help_text='망막 박리 수술을 받은 적이 있나요?', null=True, verbose_name='망막박리 수술'), blank=True, null=True, size=None)),
                ('retinal_detachment_op_history', models.TextField(blank=True, help_text='수술 이력을 자세히 적어주세요', null=True, verbose_name='망막박리 수술 이력')),
                ('mutation_list', models.FileField(blank=True, null=True, upload_to='ird/mutation/%Y/%m/%d', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['csv'])], verbose_name='IRD 관련 유젼자 변이')),
            ],
            options={
                'verbose_name': 'ird_병력청취',
                'verbose_name_plural': 'ird_병력청취',
            },
        ),
    ]
